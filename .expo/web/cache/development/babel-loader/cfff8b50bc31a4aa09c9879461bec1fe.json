{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/kenta/Documents/ugoing_matt/ugoing/src/screens/PublishPost.js\";\n\nimport React, { useEffect, useState } from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Clipboard from \"react-native-web/dist/exports/Clipboard\";\nimport { GlobalStyles, GlobalColors } from \"../styles/GlobalStyles\";\nimport { fs } from \"../Firebase/firebase\";\nimport { Ionicons } from \"@expo/vector-icons\";\nimport { ShareComponent } from \"../components/ShareComponent\";\nexport var PublishPost = function PublishPost(_ref) {\n  var _route$params;\n\n  var route = _ref.route,\n      navigation = _ref.navigation;\n\n  var _useState = useState({}),\n      _useState2 = _slicedToArray(_useState, 2),\n      eventDetails = _useState2[0],\n      setEventDetails = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      url = _useState4[0],\n      setURL = _useState4[1];\n\n  var eventID = route.params.eventID;\n  useEffect(function () {\n    if (eventID == \"\") {\n      console.log(\"route params not found\");\n      return;\n    }\n\n    var docRef = fs.collection(\"events\").doc(eventID);\n    docRef.get().then(function (doc) {\n      if (doc.exists) {\n        setEventDetails(doc.data());\n        setURL(\"ugoing.us/u/\" + eventID);\n      } else {\n        console.log(\"ERROR: Document with eventID \" + route.params + \" not found!\");\n      }\n    }).catch(function (error) {\n      console.log(\"Error getting document:\", error);\n    });\n  }, [(_route$params = route.params) == null ? void 0 : _route$params.eventID]);\n\n  var getTitleSection = function getTitleSection() {\n    if (!eventDetails || !eventDetails.eventName) {\n      return React.createElement(View, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 20\n        }\n      });\n    }\n\n    return React.createElement(View, {\n      style: styles.eventTitleSection,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }\n    }, React.createElement(Text, {\n      style: GlobalStyles.subheaderText,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }\n    }, eventDetails.eventName), React.createElement(TouchableOpacity, {\n      style: {\n        paddingRight: 20,\n        justifyContent: \"center\"\n      },\n      onPress: function onPress() {},\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }\n    }, React.createElement(Text, {\n      style: {\n        textDecorationLine: \"underline\",\n        fontSize: 15\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 21\n      }\n    }, \"view event\")));\n  };\n\n  var getCongratsSection = function getCongratsSection() {\n    return React.createElement(View, {\n      style: GlobalStyles.infoSection,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 13\n      }\n    }, React.createElement(Text, {\n      style: GlobalStyles.subheaderText_smaller,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }\n    }, \"Congratulations \\uD83D\\uDC4F\\uD83C\\uDF89\"), React.createElement(Text, {\n      style: GlobalStyles.bodyText,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }\n    }, \"You\\u2019ve just published\", \" \\n\"), React.createElement(Text, {\n      style: [GlobalStyles.bodyText, {\n        fontWeight: \"bold\",\n        paddingLeft: 0,\n        textAlign: \"center\"\n      }],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }\n    }, eventDetails.eventName, \"!\"), React.createElement(Text, {\n      style: GlobalStyles.bodyText,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }\n    }, \"Click below to share details with friends:\", \" \"));\n  };\n\n  var getShareSection = function getShareSection() {\n    return React.createElement(View, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 13\n      }\n    }, React.createElement(View, {\n      style: [GlobalStyles.infoSectionFilledBlue, {\n        flexDirection: \"row\"\n      }],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 17\n      }\n    }, React.createElement(View, {\n      style: {\n        width: \"75%\",\n        borderColor: GlobalColors.blueOutline,\n        borderRightWidth: 1\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 21\n      }\n    }, React.createElement(Text, {\n      style: GlobalStyles.subheaderText_smaller,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 25\n      }\n    }, \"Add to Calendar\")), React.createElement(View, {\n      style: {\n        width: \"25%\",\n        alignItems: \"center\",\n        justifyContent: \"center\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 21\n      }\n    }, React.createElement(Ionicons, {\n      name: \"add-outline\",\n      size: 32,\n      color: \"black\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 25\n      }\n    }))), React.createElement(Text, {\n      style: GlobalStyles.subheaderText,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 17\n      }\n    }, \"Share It \\uD83D\\uDCE4\"), React.createElement(View, {\n      style: [GlobalStyles.infoSectionFilledGreen, {\n        flexDirection: \"row\"\n      }],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 17\n      }\n    }, React.createElement(View, {\n      style: {\n        width: \"75%\",\n        borderColor: GlobalColors.greenOutline,\n        borderRightWidth: 1,\n        justifyContent: \"center\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 21\n      }\n    }, React.createElement(Text, {\n      style: [GlobalStyles.bodyText, {\n        textDecorationLine: \"underline\"\n      }],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 25\n      }\n    }, url)), React.createElement(View, {\n      style: {\n        width: \"25%\",\n        alignItems: \"center\",\n        justifyContent: \"center\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 21\n      }\n    }, React.createElement(TouchableOpacity, {\n      onPress: function onPress() {\n        Clipboard.setString(url);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 25\n      }\n    }, React.createElement(Text, {\n      style: [GlobalStyles.bodyText, {\n        color: GlobalColors.greenOutline,\n        paddingLeft: 0\n      }],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 29\n      }\n    }, \"COPY\")))), React.createElement(ShareComponent, {\n      url: url,\n      eventName: eventDetails.eventName,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 17\n      }\n    }));\n  };\n\n  return React.createElement(View, {\n    style: GlobalStyles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: {\n      justifyContent: \"flex-start\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 13\n    }\n  }, getTitleSection(), getCongratsSection(), React.createElement(Text, {\n    style: GlobalStyles.subheaderText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 17\n    }\n  }, \"Plan It \\uD83D\\uDCC5\")), getShareSection(), React.createElement(View, {\n    style: GlobalStyles.bottomSection,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    style: {\n      width: \"90%\",\n      marginBottom: 10\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    style: [GlobalStyles.bodyText, {\n      textAlign: \"center\"\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 21\n    }\n  }, \"To edit this event in the future \", \"\\n\", \" create an account\", \" \")), React.createElement(TouchableOpacity, {\n    style: GlobalStyles.submitButton,\n    onPress: function onPress() {\n      console.log(navigation);\n      navigation.navigate(\"Signup\");\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    style: GlobalStyles.buttonText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 21\n    }\n  }, \"Create Account\")), React.createElement(View, {\n    style: {\n      width: \"90%\",\n      marginBottom: 10\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    style: [GlobalStyles.bodyText, {\n      textAlign: \"center\"\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 21\n    }\n  }, \"(it only takes 30 seconds \\uD83D\\uDE01)\"))));\n};\nvar styles = StyleSheet.create({\n  eventTitleSection: {\n    flex: 1,\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"baseline\"\n  }\n});","map":{"version":3,"sources":["/Users/kenta/Documents/ugoing_matt/ugoing/src/screens/PublishPost.js"],"names":["React","useEffect","useState","GlobalStyles","GlobalColors","fs","Ionicons","ShareComponent","PublishPost","route","navigation","eventDetails","setEventDetails","url","setURL","eventID","params","console","log","docRef","collection","doc","get","then","exists","data","catch","error","getTitleSection","eventName","styles","eventTitleSection","subheaderText","paddingRight","justifyContent","textDecorationLine","fontSize","getCongratsSection","infoSection","subheaderText_smaller","bodyText","fontWeight","paddingLeft","textAlign","getShareSection","infoSectionFilledBlue","flexDirection","width","borderColor","blueOutline","borderRightWidth","alignItems","infoSectionFilledGreen","greenOutline","Clipboard","setString","color","container","bottomSection","marginBottom","submitButton","navigate","buttonText","StyleSheet","create","flex"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport {\n    Text,\n    View,\n    StyleSheet,\n    TouchableOpacity,\n    Clipboard,\n} from \"react-native\";\nimport { GlobalStyles, GlobalColors } from \"../styles/GlobalStyles\";\nimport { fs } from \"../Firebase/firebase\";\nimport { Ionicons } from \"@expo/vector-icons\";\n// The below import isn't working for me -- setString fails\n//import Clipboard from \"@react-native-community/clipboard\";\nimport { ShareComponent } from \"../components/ShareComponent\";\n\n// route.params - eventID to event\nexport const PublishPost = ({ route, navigation }) => {\n    //console.log(\"passed info is \" + JSON.stringify(route.params));\n    const [eventDetails, setEventDetails] = useState({});\n    const [url, setURL] = useState(\"\");\n\n    const { eventID } = route.params;\n\n    useEffect(() => {\n        if (eventID == \"\") {\n            console.log(\"route params not found\");\n            return;\n        }\n        var docRef = fs.collection(\"events\").doc(eventID);\n        //var docRef = fs.collection('events').doc(\"cks0i7SlWYGD8Vy4Cr8z\");\n\n        docRef\n            .get()\n            .then((doc) => {\n                if (doc.exists) {\n                    setEventDetails(doc.data());\n                    setURL(`ugoing.us/u/${eventID}`);\n                } else {\n                    console.log(\n                        \"ERROR: Document with eventID \" +\n                            route.params +\n                            \" not found!\"\n                    );\n                }\n            })\n            .catch((error) => {\n                console.log(\"Error getting document:\", error);\n            });\n    }, [route.params?.eventID]);\n\n    const getTitleSection = () => {\n        // check to make sure firebase data exists\n        if (!eventDetails || !eventDetails.eventName) {\n            return <View></View>;\n        }\n\n        return (\n            <View style={styles.eventTitleSection}>\n                <Text style={GlobalStyles.subheaderText}>\n                    {eventDetails.eventName}\n                </Text>\n\n                <TouchableOpacity\n                    style={{\n                        paddingRight: 20,\n                        justifyContent: \"center\",\n                    }}\n                    onPress={() => {\n                        // navigate to actual event\n                    }}\n                >\n                    <Text\n                        style={{\n                            textDecorationLine: \"underline\",\n                            fontSize: 15,\n                        }}\n                    >\n                        view event\n                    </Text>\n                </TouchableOpacity>\n            </View>\n        );\n    };\n\n    const getCongratsSection = () => {\n        return (\n            <View style={GlobalStyles.infoSection}>\n                <Text style={GlobalStyles.subheaderText_smaller}>\n                    Congratulations 👏🎉\n                </Text>\n                <Text style={GlobalStyles.bodyText}>\n                    You’ve just published{\" \\n\"}\n                </Text>\n                <Text\n                    style={[\n                        GlobalStyles.bodyText,\n                        {\n                            fontWeight: \"bold\",\n                            paddingLeft: 0,\n                            textAlign: \"center\",\n                        },\n                    ]}\n                >\n                    {eventDetails.eventName}!\n                </Text>\n                <Text style={GlobalStyles.bodyText}>\n                    Click below to share details with friends:{\" \"}\n                </Text>\n            </View>\n        );\n    };\n\n    const getShareSection = () => {\n        return (\n            <View>\n                <View\n                    style={[\n                        GlobalStyles.infoSectionFilledBlue,\n                        { flexDirection: \"row\" },\n                    ]}\n                >\n                    <View\n                        style={{\n                            width: \"75%\",\n                            borderColor: GlobalColors.blueOutline,\n                            borderRightWidth: 1,\n                        }}\n                    >\n                        <Text style={GlobalStyles.subheaderText_smaller}>\n                            Add to Calendar\n                        </Text>\n                    </View>\n                    <View\n                        style={{\n                            width: \"25%\",\n                            alignItems: \"center\",\n                            justifyContent: \"center\",\n                        }}\n                    >\n                        <Ionicons name=\"add-outline\" size={32} color=\"black\" />\n                    </View>\n                </View>\n                <Text style={GlobalStyles.subheaderText}>Share It 📤</Text>\n                <View\n                    style={[\n                        GlobalStyles.infoSectionFilledGreen,\n                        { flexDirection: \"row\" },\n                    ]}\n                >\n                    <View\n                        style={{\n                            width: \"75%\",\n                            borderColor: GlobalColors.greenOutline,\n                            borderRightWidth: 1,\n                            justifyContent: \"center\",\n                        }}\n                    >\n                        <Text\n                            style={[\n                                GlobalStyles.bodyText,\n                                { textDecorationLine: \"underline\" },\n                            ]}\n                        >\n                            {url}\n                        </Text>\n                    </View>\n                    <View\n                        style={{\n                            width: \"25%\",\n                            alignItems: \"center\",\n                            justifyContent: \"center\",\n                        }}\n                    >\n                        <TouchableOpacity\n                            onPress={() => {\n                                Clipboard.setString(url);\n                            }}\n                        >\n                            <Text\n                                style={[\n                                    GlobalStyles.bodyText,\n                                    {\n                                        color: GlobalColors.greenOutline,\n                                        paddingLeft: 0,\n                                    },\n                                ]}\n                            >\n                                COPY\n                            </Text>\n                        </TouchableOpacity>\n                    </View>\n                </View>\n                <ShareComponent url={url} eventName={eventDetails.eventName} />\n            </View>\n        );\n    };\n\n    return (\n        <View style={GlobalStyles.container}>\n            <View style={{ justifyContent: \"flex-start\" }}>\n                {getTitleSection()}\n                {getCongratsSection()}\n                <Text style={GlobalStyles.subheaderText}>Plan It 📅</Text>\n            </View>\n            {getShareSection()}\n            <View style={GlobalStyles.bottomSection}>\n                <View style={{ width: \"90%\", marginBottom: 10 }}>\n                    <Text\n                        style={[GlobalStyles.bodyText, { textAlign: \"center\" }]}\n                    >\n                        To edit this event in the future {\"\\n\"} create an\n                        account{\" \"}\n                    </Text>\n                </View>\n                <TouchableOpacity\n                    style={GlobalStyles.submitButton}\n                    onPress={() => {\n                        console.log(navigation);\n                        navigation.navigate(\"Signup\");\n                    }}\n                >\n                    <Text style={GlobalStyles.buttonText}>Create Account</Text>\n                </TouchableOpacity>\n                <View style={{ width: \"90%\", marginBottom: 10 }}>\n                    <Text\n                        style={[GlobalStyles.bodyText, { textAlign: \"center\" }]}\n                    >\n                        (it only takes 30 seconds 😁)\n                    </Text>\n                </View>\n            </View>\n        </View>\n    );\n};\n\nconst styles = StyleSheet.create({\n    eventTitleSection: {\n        flex: 1,\n        flexDirection: \"row\",\n        justifyContent: \"space-between\",\n        alignItems: \"baseline\",\n    },\n});\n"]},"metadata":{},"sourceType":"module"}