{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/kenta/Documents/ugoing_matt/ugoing/src/screens/CreateEvent.js\";\n\nimport React, { useState, useEffect } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Switch from 'react-ios-switch';\nimport { GlobalColors, GlobalStyles } from \"../styles/GlobalStyles\";\nimport \"../styles/datePicker.css\";\nimport { DatePicker, TimePicker, Space } from \"antd\";\nimport \"antd/dist/antd.css\";\nimport { ProgressBar } from \"react-native-paper\";\nimport moment from \"moment\";\nimport { fs } from \"../Firebase/firebase\";\nimport AutocompleteSearch from \"../components/AutocompleteSearch\";\nimport Flatpickr from \"react-flatpickr\";\nimport { BrowserView, MobileView } from 'react-device-detect';\nvar STATES = {\n  NAME: 0,\n  TIME: 1,\n  PLACE: 2,\n  PEOPLE: 3,\n  FINISH: 4\n};\nexport var CreateEvent = function CreateEvent(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState({\n    state: STATES.NAME\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      status = _useState2[0],\n      setStatus = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      eventName = _useState4[0],\n      setEventName = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      eventDetails = _useState6[0],\n      setEventDetails = _useState6[1];\n\n  var _useState7 = useState(moment().startOf('hour').add(1, \"hours\")),\n      _useState8 = _slicedToArray(_useState7, 2),\n      startDate = _useState8[0],\n      setStartDate = _useState8[1];\n\n  var _useState9 = useState(moment().startOf('hour').add(2, \"hours\")),\n      _useState10 = _slicedToArray(_useState9, 2),\n      endDate = _useState10[0],\n      setEndDate = _useState10[1];\n\n  var _useState11 = useState(''),\n      _useState12 = _slicedToArray(_useState11, 2),\n      dateEntryError = _useState12[0],\n      setDateEntryError = _useState12[1];\n\n  var _useState13 = useState(true),\n      _useState14 = _slicedToArray(_useState13, 2),\n      showEndTime = _useState14[0],\n      setShowEndTime = _useState14[1];\n\n  var _useState15 = useState(\"\"),\n      _useState16 = _slicedToArray(_useState15, 2),\n      eventLocation = _useState16[0],\n      setEventLocation = _useState16[1];\n\n  var _useState17 = useState(\"\"),\n      _useState18 = _slicedToArray(_useState17, 2),\n      arrivalInstructions = _useState18[0],\n      setArrivalInstructions = _useState18[1];\n\n  var _useState19 = useState(\"\"),\n      _useState20 = _slicedToArray(_useState19, 2),\n      phoneNumber = _useState20[0],\n      setPhoneNumber = _useState20[1];\n\n  var _useState21 = useState(\"\"),\n      _useState22 = _slicedToArray(_useState21, 2),\n      organizerName = _useState22[0],\n      setOrganizerName = _useState22[1];\n\n  var _useState23 = useState([]),\n      _useState24 = _slicedToArray(_useState23, 2),\n      sectionTitles = _useState24[0],\n      setSectionTitles = _useState24[1];\n\n  var _useState25 = useState(\"\"),\n      _useState26 = _slicedToArray(_useState25, 2),\n      errorStatus = _useState26[0],\n      setErrorStatus = _useState26[1];\n\n  var datepickerRef = React.createRef();\n  useEffect(function () {\n    var newSectionTitles = [];\n\n    for (var i = 0; i <= status.state; i++) {\n      var newSection = {\n        id: i,\n        title: getSectionTitle(i)\n      };\n      newSectionTitles.push(newSection);\n    }\n\n    setSectionTitles(function (sectionTitles) {\n      return newSectionTitles;\n    });\n  }, [status]);\n\n  function getSectionTitle(section) {\n    switch (section) {\n      case STATES.NAME:\n        return eventName != \"\" ? eventName : \"What ✏️\";\n\n      case STATES.TIME:\n        return \"When 🕐\";\n\n      case STATES.PLACE:\n        return \"Where 🌎\";\n\n      case STATES.PEOPLE:\n        return \"Who 📞\";\n    }\n  }\n\n  var showProgressBar = function showProgressBar() {\n    var progress = status.state / 4;\n    return React.createElement(ProgressBar, {\n      progress: progress,\n      color: \"black\",\n      style: {\n        marginHorizontal: 10\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 13\n      }\n    });\n  };\n\n  var getMinimizedSection = function getMinimizedSection(_ref2) {\n    var item = _ref2.item;\n    return React.createElement(View, {\n      style: styles.minimizedSection,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 13\n      }\n    }, React.createElement(Text, {\n      style: GlobalStyles.subheaderText,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }\n    }, getSectionTitle(item.id)), item.id < status.state && React.createElement(TouchableOpacity, {\n      style: {\n        paddingRight: 20,\n        justifyContent: \"center\"\n      },\n      onPress: function onPress() {\n        setErrorStatus(\"\");\n        setStatus({\n          state: item.id\n        });\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 21\n      }\n    }, React.createElement(Text, {\n      style: {\n        textDecorationLine: \"underline\",\n        fontSize: 15\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 25\n      }\n    }, \"Edit\")));\n  };\n\n  var onChangeDate = function onChangeDate(date, isStartTime) {\n    console.log(date);\n\n    if (isStartTime) {\n      setStartDate(date);\n    } else setEndDate(date);\n  };\n\n  function disabledDates(current) {\n    return current < startDate;\n  }\n\n  function incrementStatus() {\n    setErrorStatus(\"\");\n    setStatus({\n      state: status.state + 1\n    });\n  }\n\n  function validateSection() {\n    switch (status.state) {\n      case STATES.NAME:\n        if (eventName === \"\") setErrorStatus(\"Please enter a valid event name!\");else incrementStatus();\n        return;\n\n      case STATES.TIME:\n        if (startDate === null) setErrorStatus(\"Please input a valid start date!\");else if (endDate.isBefore(startDate)) setErrorStatus(\"Cannot have an event end before the start time!\");else if (startDate.isBefore(moment())) setErrorStatus(\"Cannot set events in the past\");else incrementStatus();\n        return;\n\n      case STATES.PLACE:\n        incrementStatus();\n        return;\n\n      case STATES.PEOPLE:\n        submitData();\n        return;\n    }\n  }\n\n  function submitData() {\n    var eventData = {\n      eventName: eventName,\n      eventDetails: eventDetails,\n      startDate: startDate.format(\"M/D/YYYY, h:mm a\").toString(),\n      endDate: endDate.format(\"M/D/YYYY, h:mm a\").toString(),\n      eventLocation: eventLocation,\n      arrivalInstructions: arrivalInstructions,\n      phoneNumber: phoneNumber,\n      organizerName: organizerName\n    };\n    console.log(eventData);\n    fs.collection(\"events\").add(eventData).then(function (value) {\n      console.log(value.id);\n      navigation.navigate(\"Publish\", {\n        eventID: value.id\n      });\n    });\n  }\n\n  var getCurrentSection = function getCurrentSection() {\n    console.log(startDate.format('YYYY-MM-DD HH:mm'));\n\n    switch (status.state) {\n      case STATES.NAME:\n        return React.createElement(View, {\n          style: GlobalStyles.infoSectionFilled,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 21\n          }\n        }, React.createElement(Text, {\n          style: GlobalStyles.subheaderText,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 25\n          }\n        }, \"Event Name \", React.createElement(Text, {\n          style: {\n            color: \"red\"\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 40\n          }\n        }, \"*\")), React.createElement(TextInput, {\n          style: GlobalStyles.textInput,\n          onChangeText: setEventName,\n          value: eventName,\n          placeholder: \"e.g. John's Surprise Birthday Party\",\n          autoCompleteType: \"off\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 25\n          }\n        }), React.createElement(Text, {\n          style: GlobalStyles.subheaderText,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 25\n          }\n        }, \"Event Description\"), React.createElement(TextInput, {\n          style: GlobalStyles.textInput,\n          onChangeText: setEventDetails,\n          value: eventDetails,\n          placeholder: \"Enter your event details here!\",\n          autoCompleteType: \"off\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 25\n          }\n        }));\n\n      case STATES.TIME:\n        return React.createElement(View, {\n          style: GlobalStyles.infoSectionFilled,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 21\n          }\n        }, React.createElement(View, {\n          style: {\n            alignItems: \"center\"\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 25\n          }\n        }), React.createElement(Text, {\n          style: GlobalStyles.subheaderText,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 25\n          }\n        }, \"Start Time\"), React.createElement(View, {\n          style: GlobalStyles.timeButton,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 25\n          }\n        }, React.createElement(BrowserView, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 29\n          }\n        }, React.createElement(DatePicker, {\n          value: startDate,\n          onChange: function onChange(date) {\n            return onChangeDate(date, true);\n          },\n          inputReadOnly: true,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 33\n          }\n        }), React.createElement(TimePicker, {\n          format: \"HH:mm\",\n          minuteStep: 5,\n          use12Hours: true,\n          showNow: false,\n          value: startDate,\n          onChange: function onChange(date) {\n            return onChangeDate(date, true);\n          },\n          inputReadOnly: true,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 33\n          }\n        })), React.createElement(MobileView, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 29\n          }\n        }, React.createElement(Flatpickr, {\n          options: {\n            enableTime: true,\n            time_24hr: false,\n            defaultDate: startDate.format('YYYY-MM-DD HH:mm'),\n            minuteIncrement: 10\n          },\n          minuteStep: 5,\n          onChange: function onChange(dstr, dobjs, fp) {\n            return setTimeout(function () {\n              var i = fp.latestSelectedDateObj;\n              var d = i ? i : new Date();\n              var mins = d.getMinutes();\n              if (mins % 5) d.setMinutes(5 * Math.round(d.getMinutes() / 5));\n              onChangeDate(moment(d, \"ddd MMM DD YYYY HH:mm:ss ZZ \"), true);\n            }, 1000);\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 37\n          }\n        }))), React.createElement(View, {\n          style: styles.endTimeSection,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 301,\n            columnNumber: 25\n          }\n        }, React.createElement(Text, {\n          style: GlobalStyles.subheaderText,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 302,\n            columnNumber: 29\n          }\n        }, \"End Time\"), React.createElement(Switch, {\n          checked: showEndTime,\n          onChange: setShowEndTime,\n          offColor: \"#767577\",\n          onColor: GlobalColors.shamrock,\n          style: GlobalStyles.toggleSwitch,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 305,\n            columnNumber: 29\n          }\n        })), showEndTime && React.createElement(View, {\n          style: GlobalStyles.timeButton,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 327,\n            columnNumber: 29\n          }\n        }, React.createElement(BrowserView, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 328,\n            columnNumber: 33\n          }\n        }, React.createElement(DatePicker, {\n          value: endDate,\n          onChange: function onChange(date) {\n            return onChangeDate(date, false);\n          },\n          disabledDate: disabledDates,\n          inputReadOnly: true,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 329,\n            columnNumber: 37\n          }\n        }), React.createElement(TimePicker, {\n          format: \"HH:mm\",\n          minuteStep: 5,\n          use12Hours: true,\n          showNow: false,\n          value: endDate,\n          onChange: function onChange(date) {\n            return onChangeDate(date, false);\n          },\n          inputReadOnly: true,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 337,\n            columnNumber: 37\n          }\n        })), React.createElement(MobileView, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 349,\n            columnNumber: 33\n          }\n        }, React.createElement(Flatpickr, {\n          ref: function ref(fp) {\n            return _this.flatpickr = fp;\n          },\n          options: {\n            time_24hr: false,\n            enableTime: true,\n            defaultDate: endDate.format('YYYY-MM-DD HH:mm')\n          },\n          onChange: function onChange(dstr, dobjs, fp) {\n            return setTimeout(function () {\n              var i = fp.latestSelectedDateObj;\n              var d = i ? i : new Date();\n              var mins = d.getMinutes();\n              if (mins % 5) d.setMinutes(5 * Math.round(d.getMinutes() / 5));\n              onChangeDate(moment(d, \"ddd MMM DD YYYY HH:mm:ss ZZ \"), false);\n            }, 1000);\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 350,\n            columnNumber: 37\n          }\n        }, React.createElement(TouchableOpacity, {\n          style: GlobalStyles.submitButton,\n          onPress: function onPress() {\n            if (_this.fp) {\n              _this.fp.flatpickr.open();\n            }\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 373,\n            columnNumber: 37\n          }\n        }, React.createElement(Text, {\n          style: GlobalStyles.buttonText,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 377,\n            columnNumber: 41\n          }\n        }, buttonText()))))));\n\n      case STATES.PLACE:\n        return React.createElement(View, {\n          style: GlobalStyles.infoSectionFilled,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 387,\n            columnNumber: 21\n          }\n        }, React.createElement(Text, {\n          style: GlobalStyles.subheaderText,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 388,\n            columnNumber: 25\n          }\n        }, \"Place\"), React.createElement(AutocompleteSearch, {\n          onChangeOutputText: function onChangeOutputText(text) {\n            setEventLocation(text);\n          },\n          value: eventLocation,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 389,\n            columnNumber: 25\n          }\n        }), React.createElement(Text, {\n          style: GlobalStyles.subheaderText,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 395,\n            columnNumber: 25\n          }\n        }, \"Instructions\"), React.createElement(TextInput, {\n          style: GlobalStyles.textInput,\n          onChangeText: setArrivalInstructions,\n          value: arrivalInstructions,\n          placeholder: \"There's guest parking in Lot B!\",\n          autoCompleteType: \"off\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 398,\n            columnNumber: 25\n          }\n        }));\n\n      case STATES.PEOPLE:\n        return React.createElement(View, {\n          style: GlobalStyles.infoSectionFilled,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 409,\n            columnNumber: 21\n          }\n        }, React.createElement(Text, {\n          style: GlobalStyles.subheaderText,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 410,\n            columnNumber: 25\n          }\n        }, \"Event Creator\"), React.createElement(TextInput, {\n          style: GlobalStyles.textInput,\n          onChangeText: setOrganizerName,\n          value: organizerName,\n          placeholder: \"Joe Shmoe\",\n          autoCompleteType: \"name\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 413,\n            columnNumber: 25\n          }\n        }), React.createElement(Text, {\n          style: GlobalStyles.subheaderText,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 420,\n            columnNumber: 25\n          }\n        }, \"Phone Number\"), React.createElement(TextInput, {\n          style: GlobalStyles.textInput,\n          onChangeText: setPhoneNumber,\n          value: phoneNumber,\n          placeholder: \"678-999-8212\",\n          autoCompleteType: \"tel\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 423,\n            columnNumber: 25\n          }\n        }));\n\n      default:\n        return React.createElement(View, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 433,\n            columnNumber: 24\n          }\n        });\n    }\n  };\n\n  function buttonText() {\n    switch (status.state) {\n      case STATES.NAME:\n        return \"Next\";\n\n      case STATES.TIME:\n        return \"Keep Going\";\n\n      case STATES.PLACE:\n        return \"Almost There\";\n\n      case STATES.PEOPLE:\n        return \"Submit!\";\n\n      default:\n        return \"Next\";\n    }\n  }\n\n  return React.createElement(View, {\n    style: GlobalStyles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 453,\n      columnNumber: 9\n    }\n  }, showProgressBar(), React.createElement(View, {\n    style: GlobalStyles.topSection,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 455,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 456,\n      columnNumber: 17\n    }\n  }, React.createElement(FlatList, {\n    data: sectionTitles,\n    renderItem: getMinimizedSection,\n    keyExtractor: function keyExtractor(item) {\n      return item.id.toString();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 457,\n      columnNumber: 21\n    }\n  }), getCurrentSection())), React.createElement(View, {\n    style: GlobalStyles.bottomSection,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 466,\n      columnNumber: 13\n    }\n  }, React.createElement(TouchableOpacity, {\n    style: GlobalStyles.submitButton,\n    onPress: validateSection,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 467,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    style: GlobalStyles.buttonText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 471,\n      columnNumber: 21\n    }\n  }, buttonText())), React.createElement(Text, {\n    style: GlobalStyles.errorText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 473,\n      columnNumber: 17\n    }\n  }, errorStatus)));\n};\nvar styles = StyleSheet.create({\n  minimizedSection: {\n    flex: 1,\n    flexDirection: \"row\",\n    justifyContent: \"space-between\"\n  },\n  endTimeSection: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    paddingRight: 20\n  }\n});","map":{"version":3,"sources":["/Users/kenta/Documents/ugoing_matt/ugoing/src/screens/CreateEvent.js"],"names":["React","useState","useEffect","Switch","GlobalColors","GlobalStyles","DatePicker","TimePicker","Space","ProgressBar","moment","fs","AutocompleteSearch","Flatpickr","BrowserView","MobileView","STATES","NAME","TIME","PLACE","PEOPLE","FINISH","CreateEvent","navigation","state","status","setStatus","eventName","setEventName","eventDetails","setEventDetails","startOf","add","startDate","setStartDate","endDate","setEndDate","dateEntryError","setDateEntryError","showEndTime","setShowEndTime","eventLocation","setEventLocation","arrivalInstructions","setArrivalInstructions","phoneNumber","setPhoneNumber","organizerName","setOrganizerName","sectionTitles","setSectionTitles","errorStatus","setErrorStatus","datepickerRef","createRef","newSectionTitles","i","newSection","id","title","getSectionTitle","push","section","showProgressBar","progress","marginHorizontal","getMinimizedSection","item","styles","minimizedSection","subheaderText","paddingRight","justifyContent","textDecorationLine","fontSize","onChangeDate","date","isStartTime","console","log","disabledDates","current","incrementStatus","validateSection","isBefore","submitData","eventData","format","toString","collection","then","value","navigate","eventID","getCurrentSection","infoSectionFilled","color","textInput","alignItems","timeButton","enableTime","time_24hr","defaultDate","minuteIncrement","dstr","dobjs","fp","setTimeout","latestSelectedDateObj","d","Date","mins","getMinutes","setMinutes","Math","round","endTimeSection","shamrock","toggleSwitch","flatpickr","submitButton","open","buttonText","text","container","topSection","bottomSection","errorText","StyleSheet","create","flex","flexDirection"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;;;;;;AAUA,OAAOC,MAAP,MAAmB,kBAAnB;AACA,SAASC,YAAT,EAAuBC,YAAvB;AACA;AAEA,SAASC,UAAT,EAAqBC,UAArB,EAAiCC,KAAjC,QAA8C,MAA9C;AACA,OAAO,oBAAP;AAEA,SAASC,WAAT,QAA4B,oBAA5B;AAEA,OAAOC,MAAP,MAAmB,QAAnB;AACA,SAASC,EAAT;AAEA,OAAOC,kBAAP;AAEA,OAAQC,SAAR,MAAwB,iBAAxB;AACA,SAAQC,WAAR,EAAqBC,UAArB,QAAsC,qBAAtC;AAGA,IAAMC,MAAM,GAAG;AACXC,EAAAA,IAAI,EAAE,CADK;AAEXC,EAAAA,IAAI,EAAE,CAFK;AAGXC,EAAAA,KAAK,EAAE,CAHI;AAIXC,EAAAA,MAAM,EAAE,CAJG;AAKXC,EAAAA,MAAM,EAAE;AALG,CAAf;AAQA,OAAO,IAAMC,WAAW,GAAG,SAAdA,WAAc,OAAoB;AAAA,MAAjBC,UAAiB,QAAjBA,UAAiB;;AAC3C,kBAA4BtB,QAAQ,CAAC;AACjCuB,IAAAA,KAAK,EAAER,MAAM,CAACC;AADmB,GAAD,CAApC;AAAA;AAAA,MAAOQ,MAAP;AAAA,MAAeC,SAAf;;AAIA,mBAAkCzB,QAAQ,CAAC,EAAD,CAA1C;AAAA;AAAA,MAAO0B,SAAP;AAAA,MAAkBC,YAAlB;;AACA,mBAAwC3B,QAAQ,CAAC,EAAD,CAAhD;AAAA;AAAA,MAAO4B,YAAP;AAAA,MAAqBC,eAArB;;AAEA,mBAAkC7B,QAAQ,CAEtCS,MAAM,GAAGqB,OAAT,CAAiB,MAAjB,EAAyBC,GAAzB,CAA6B,CAA7B,EAAgC,OAAhC,CAFsC,CAA1C;AAAA;AAAA,MAAOC,SAAP;AAAA,MAAkBC,YAAlB;;AAIA,mBAA8BjC,QAAQ,CAElCS,MAAM,GAAGqB,OAAT,CAAiB,MAAjB,EAAyBC,GAAzB,CAA6B,CAA7B,EAAgC,OAAhC,CAFkC,CAAtC;AAAA;AAAA,MAAOG,OAAP;AAAA,MAAgBC,UAAhB;;AAKA,oBAA4CnC,QAAQ,CAAC,EAAD,CAApD;AAAA;AAAA,MAAOoC,cAAP;AAAA,MAAuBC,iBAAvB;;AAEA,oBAAsCrC,QAAQ,CAAC,IAAD,CAA9C;AAAA;AAAA,MAAOsC,WAAP;AAAA,MAAoBC,cAApB;;AAGA,oBAA0CvC,QAAQ,CAAC,EAAD,CAAlD;AAAA;AAAA,MAAOwC,aAAP;AAAA,MAAsBC,gBAAtB;;AACA,oBAAsDzC,QAAQ,CAAC,EAAD,CAA9D;AAAA;AAAA,MAAO0C,mBAAP;AAAA,MAA4BC,sBAA5B;;AAEA,oBAAsC3C,QAAQ,CAAC,EAAD,CAA9C;AAAA;AAAA,MAAO4C,WAAP;AAAA,MAAoBC,cAApB;;AACA,oBAA0C7C,QAAQ,CAAC,EAAD,CAAlD;AAAA;AAAA,MAAO8C,aAAP;AAAA,MAAsBC,gBAAtB;;AAEA,oBAA0C/C,QAAQ,CAAC,EAAD,CAAlD;AAAA;AAAA,MAAOgD,aAAP;AAAA,MAAsBC,gBAAtB;;AAEA,oBAAsCjD,QAAQ,CAAC,EAAD,CAA9C;AAAA;AAAA,MAAOkD,WAAP;AAAA,MAAoBC,cAApB;;AAEA,MAAMC,aAAa,GAAGrD,KAAK,CAACsD,SAAN,EAAtB;AAGApD,EAAAA,SAAS,CAAC,YAAM;AACZ,QAAIqD,gBAAgB,GAAG,EAAvB;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAI/B,MAAM,CAACD,KAA5B,EAAmCgC,CAAC,EAApC,EAAwC;AACpC,UAAIC,UAAU,GAAG;AAAEC,QAAAA,EAAE,EAAEF,CAAN;AAASG,QAAAA,KAAK,EAAEC,eAAe,CAACJ,CAAD;AAA/B,OAAjB;AACAD,MAAAA,gBAAgB,CAACM,IAAjB,CAAsBJ,UAAtB;AACH;;AACDP,IAAAA,gBAAgB,CAAC,UAACD,aAAD;AAAA,aAAmBM,gBAAnB;AAAA,KAAD,CAAhB;AACH,GAPQ,EAON,CAAC9B,MAAD,CAPM,CAAT;;AASA,WAASmC,eAAT,CAAyBE,OAAzB,EAAkC;AAC9B,YAAQA,OAAR;AACI,WAAK9C,MAAM,CAACC,IAAZ;AACI,eAAOU,SAAS,IAAI,EAAb,GAAkBA,SAAlB,GAA8B,SAArC;;AACJ,WAAKX,MAAM,CAACE,IAAZ;AACI,eAAO,SAAP;;AACJ,WAAKF,MAAM,CAACG,KAAZ;AACI,eAAO,UAAP;;AACJ,WAAKH,MAAM,CAACI,MAAZ;AACI,eAAO,QAAP;AARR;AAUH;;AAED,MAAM2C,eAAe,GAAG,SAAlBA,eAAkB,GAAM;AAC1B,QAAIC,QAAQ,GAAGvC,MAAM,CAACD,KAAP,GAAe,CAA9B;AACA,WACI,oBAAC,WAAD;AACI,MAAA,QAAQ,EAAEwC,QADd;AAEI,MAAA,KAAK,EAAE,OAFX;AAGI,MAAA,KAAK,EAAE;AAAEC,QAAAA,gBAAgB,EAAE;AAApB,OAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AAOH,GATD;;AAWA,MAAMC,mBAAmB,GAAG,SAAtBA,mBAAsB,QAAc;AAAA,QAAXC,IAAW,SAAXA,IAAW;AACtC,WACI,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAEC,MAAM,CAACC,gBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAEhE,YAAY,CAACiE,aAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKV,eAAe,CAACO,IAAI,CAACT,EAAN,CADpB,CADJ,EAIKS,IAAI,CAACT,EAAL,GAAUjC,MAAM,CAACD,KAAjB,IACG,oBAAC,gBAAD;AACI,MAAA,KAAK,EAAE;AACH+C,QAAAA,YAAY,EAAE,EADX;AAEHC,QAAAA,cAAc,EAAE;AAFb,OADX;AAKI,MAAA,OAAO,EAAE,mBAAM;AACXpB,QAAAA,cAAc,CAAC,EAAD,CAAd;AACA1B,QAAAA,SAAS,CAAC;AAAEF,UAAAA,KAAK,EAAE2C,IAAI,CAACT;AAAd,SAAD,CAAT;AACH,OARL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAUI,oBAAC,IAAD;AACI,MAAA,KAAK,EAAE;AACHe,QAAAA,kBAAkB,EAAE,WADjB;AAEHC,QAAAA,QAAQ,EAAE;AAFP,OADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAVJ,CALR,CADJ;AA4BH,GA7BD;;AAkCA,MAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,IAAD,EAAOC,WAAP,EAAuB;AACxCC,IAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;;AACA,QAAIC,WAAJ,EAAiB;AACb3C,MAAAA,YAAY,CAAC0C,IAAD,CAAZ;AAIH,KALD,MAKOxC,UAAU,CAACwC,IAAD,CAAV;AAEV,GATD;;AAWA,WAASI,aAAT,CAAuBC,OAAvB,EAAgC;AAC5B,WAAOA,OAAO,GAAGhD,SAAjB;AACH;;AAED,WAASiD,eAAT,GAA2B;AACvB9B,IAAAA,cAAc,CAAC,EAAD,CAAd;AACA1B,IAAAA,SAAS,CAAC;AAAEF,MAAAA,KAAK,EAAEC,MAAM,CAACD,KAAP,GAAe;AAAxB,KAAD,CAAT;AACH;;AAGD,WAAS2D,eAAT,GAA2B;AACvB,YAAQ1D,MAAM,CAACD,KAAf;AACI,WAAKR,MAAM,CAACC,IAAZ;AACI,YAAIU,SAAS,KAAK,EAAlB,EACIyB,cAAc,CAAC,kCAAD,CAAd,CADJ,KAEK8B,eAAe;AACpB;;AACJ,WAAKlE,MAAM,CAACE,IAAZ;AACI,YAAIe,SAAS,KAAK,IAAlB,EACImB,cAAc,CAAC,kCAAD,CAAd,CADJ,KAEK,IAAIjB,OAAO,CAACiD,QAAR,CAAiBnD,SAAjB,CAAJ,EACDmB,cAAc,CAAC,iDAAD,CAAd,CADC,KAEA,IAAInB,SAAS,CAACmD,QAAV,CAAmB1E,MAAM,EAAzB,CAAJ,EACD0C,cAAc,CAAC,+BAAD,CAAd,CADC,KAEA8B,eAAe;AACpB;;AACJ,WAAKlE,MAAM,CAACG,KAAZ;AACI+D,QAAAA,eAAe;AACf;;AACJ,WAAKlE,MAAM,CAACI,MAAZ;AACIiE,QAAAA,UAAU;AACV;AApBR;AAsBH;;AAGD,WAASA,UAAT,GAAsB;AAClB,QAAIC,SAAS,GAAG;AACZ3D,MAAAA,SAAS,EAAEA,SADC;AAEZE,MAAAA,YAAY,EAAEA,YAFF;AAGZI,MAAAA,SAAS,EAAEA,SAAS,CAACsD,MAAV,CAAiB,kBAAjB,EAAqCC,QAArC,EAHC;AAIZrD,MAAAA,OAAO,EAAEA,OAAO,CAACoD,MAAR,CAAe,kBAAf,EAAmCC,QAAnC,EAJG;AAKZ/C,MAAAA,aAAa,EAAEA,aALH;AAMZE,MAAAA,mBAAmB,EAAEA,mBANT;AAOZE,MAAAA,WAAW,EAAEA,WAPD;AAQZE,MAAAA,aAAa,EAAEA;AARH,KAAhB;AAWA+B,IAAAA,OAAO,CAACC,GAAR,CAAYO,SAAZ;AAEA3E,IAAAA,EAAE,CAAC8E,UAAH,CAAc,QAAd,EACKzD,GADL,CACSsD,SADT,EAEKI,IAFL,CAEU,UAACC,KAAD,EAAW;AACbb,MAAAA,OAAO,CAACC,GAAR,CAAYY,KAAK,CAACjC,EAAlB;AACAnC,MAAAA,UAAU,CAACqE,QAAX,CAAoB,SAApB,EAA+B;AAAEC,QAAAA,OAAO,EAAEF,KAAK,CAACjC;AAAjB,OAA/B;AACH,KALL;AAMH;;AAED,MAAMoC,iBAAiB,GAAG,SAApBA,iBAAoB,GAAM;AAC5BhB,IAAAA,OAAO,CAACC,GAAR,CAAY9C,SAAS,CAACsD,MAAV,CAAiB,kBAAjB,CAAZ;;AACA,YAAQ9D,MAAM,CAACD,KAAf;AACI,WAAKR,MAAM,CAACC,IAAZ;AACI,eACI,oBAAC,IAAD;AAAM,UAAA,KAAK,EAAEZ,YAAY,CAAC0F,iBAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,oBAAC,IAAD;AAAM,UAAA,KAAK,EAAE1F,YAAY,CAACiE,aAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BACe,oBAAC,IAAD;AAAM,UAAA,KAAK,EAAE;AAAE0B,YAAAA,KAAK,EAAE;AAAT,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADf,CADJ,EAII,oBAAC,SAAD;AACI,UAAA,KAAK,EAAE3F,YAAY,CAAC4F,SADxB;AAEI,UAAA,YAAY,EAAErE,YAFlB;AAGI,UAAA,KAAK,EAAED,SAHX;AAII,UAAA,WAAW,EAAC,qCAJhB;AAKI,UAAA,gBAAgB,EAAC,KALrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAJJ,EAWI,oBAAC,IAAD;AAAM,UAAA,KAAK,EAAEtB,YAAY,CAACiE,aAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAXJ,EAcI,oBAAC,SAAD;AACI,UAAA,KAAK,EAAEjE,YAAY,CAAC4F,SADxB;AAEI,UAAA,YAAY,EAAEnE,eAFlB;AAGI,UAAA,KAAK,EAAED,YAHX;AAII,UAAA,WAAW,EAAC,gCAJhB;AAKI,UAAA,gBAAgB,EAAC,KALrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAdJ,CADJ;;AAwBJ,WAAKb,MAAM,CAACE,IAAZ;AACI,eACI,oBAAC,IAAD;AAAM,UAAA,KAAK,EAAEb,YAAY,CAAC0F,iBAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,oBAAC,IAAD;AAAM,UAAA,KAAK,EAAE;AAAEG,YAAAA,UAAU,EAAE;AAAd,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ,EAEI,oBAAC,IAAD;AAAM,UAAA,KAAK,EAAE7F,YAAY,CAACiE,aAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAFJ,EAKI,oBAAC,IAAD;AAAM,UAAA,KAAK,EAAEjE,YAAY,CAAC8F,UAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,oBAAC,UAAD;AACI,UAAA,KAAK,EAAElE,SADX;AAEI,UAAA,QAAQ,EAAE,kBAAC2C,IAAD;AAAA,mBAAUD,YAAY,CAACC,IAAD,EAAO,IAAP,CAAtB;AAAA,WAFd;AAGI,UAAA,aAAa,EAAE,IAHnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ,EAMI,oBAAC,UAAD;AACI,UAAA,MAAM,EAAE,OADZ;AAEI,UAAA,UAAU,EAAE,CAFhB;AAGI,UAAA,UAAU,EAAE,IAHhB;AAII,UAAA,OAAO,EAAE,KAJb;AAKI,UAAA,KAAK,EAAE3C,SALX;AAMI,UAAA,QAAQ,EAAE,kBAAC2C,IAAD;AAAA,mBAAUD,YAAY,CAACC,IAAD,EAAO,IAAP,CAAtB;AAAA,WANd;AAOI,UAAA,aAAa,EAAE,IAPnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UANJ,CADJ,EAkBI,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACQ,oBAAC,SAAD;AACI,UAAA,OAAO,EAAE;AACLwB,YAAAA,UAAU,EAAE,IADP;AAELC,YAAAA,SAAS,EAAE,KAFN;AAGLC,YAAAA,WAAW,EAAErE,SAAS,CAACsD,MAAV,CAAiB,kBAAjB,CAHR;AAILgB,YAAAA,eAAe,EAAE;AAJZ,WADb;AASI,UAAA,UAAU,EAAE,CAThB;AAcI,UAAA,QAAQ,EAAI,kBAACC,IAAD,EAAOC,KAAP,EAAcC,EAAd;AAAA,mBACRC,UAAU,CAAC,YAAW;AAClB,kBAAInD,CAAC,GAAGkD,EAAE,CAACE,qBAAX;AACA,kBAAMC,CAAC,GAAGrD,CAAC,GAAGA,CAAH,GAAO,IAAIsD,IAAJ,EAAlB;AACA,kBAAMC,IAAI,GAAGF,CAAC,CAACG,UAAF,EAAb;AAEA,kBAAID,IAAI,GAAG,CAAX,EAAcF,CAAC,CAACI,UAAF,CAAa,IAAEC,IAAI,CAACC,KAAL,CAAWN,CAAC,CAACG,UAAF,KAAiB,CAA5B,CAAf;AAEdrC,cAAAA,YAAY,CAACjE,MAAM,CAACmG,CAAD,EAAG,8BAAH,CAAP,EAA2C,IAA3C,CAAZ;AACH,aARS,EAQP,IARO,CADF;AAAA,WAdhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADR,CAlBJ,CALJ,EA+DI,oBAAC,IAAD;AAAM,UAAA,KAAK,EAAEzC,MAAM,CAACgD,cAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,oBAAC,IAAD;AAAM,UAAA,KAAK,EAAE/G,YAAY,CAACiE,aAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,EAII,oBAAC,MAAD;AAQI,UAAA,OAAO,EAAE/B,WARb;AASI,UAAA,QAAQ,EAAEC,cATd;AAUI,UAAA,QAAQ,EAAC,SAVb;AAWI,UAAA,OAAO,EAAEpC,YAAY,CAACiH,QAX1B;AAkBI,UAAA,KAAK,EAAEhH,YAAY,CAACiH,YAlBxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAJJ,CA/DJ,EAwFK/E,WAAW,IACR,oBAAC,IAAD;AAAM,UAAA,KAAK,EAAElC,YAAY,CAAC8F,UAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,oBAAC,UAAD;AACI,UAAA,KAAK,EAAEhE,OADX;AAEI,UAAA,QAAQ,EAAE,kBAACyC,IAAD;AAAA,mBACND,YAAY,CAACC,IAAD,EAAO,KAAP,CADN;AAAA,WAFd;AAKI,UAAA,YAAY,EAAEI,aALlB;AAMI,UAAA,aAAa,EAAE,IANnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ,EASI,oBAAC,UAAD;AACI,UAAA,MAAM,EAAE,OADZ;AAEI,UAAA,UAAU,EAAE,CAFhB;AAGI,UAAA,UAAU,EAAE,IAHhB;AAII,UAAA,OAAO,EAAE,KAJb;AAKI,UAAA,KAAK,EAAE7C,OALX;AAMI,UAAA,QAAQ,EAAE,kBAACyC,IAAD;AAAA,mBACND,YAAY,CAACC,IAAD,EAAO,KAAP,CADN;AAAA,WANd;AASI,UAAA,aAAa,EAAE,IATnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UATJ,CADJ,EAsBI,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,oBAAC,SAAD;AACI,UAAA,GAAG,EAAE,aAAA8B,EAAE;AAAA,mBAAI,KAAI,CAACa,SAAL,GAAgBb,EAApB;AAAA,WADX;AAII,UAAA,OAAO,EAAE;AACLL,YAAAA,SAAS,EAAE,KADN;AAELD,YAAAA,UAAU,EAAE,IAFP;AAGLE,YAAAA,WAAW,EAAEnE,OAAO,CAACoD,MAAR,CAAe,kBAAf;AAHR,WAJb;AAWI,UAAA,QAAQ,EAAI,kBAACiB,IAAD,EAAOC,KAAP,EAAcC,EAAd;AAAA,mBACRC,UAAU,CAAC,YAAW;AAClB,kBAAInD,CAAC,GAAGkD,EAAE,CAACE,qBAAX;AACA,kBAAMC,CAAC,GAAGrD,CAAC,GAAGA,CAAH,GAAO,IAAIsD,IAAJ,EAAlB;AACA,kBAAMC,IAAI,GAAGF,CAAC,CAACG,UAAF,EAAb;AAEA,kBAAID,IAAI,GAAG,CAAX,EAAcF,CAAC,CAACI,UAAF,CAAa,IAAEC,IAAI,CAACC,KAAL,CAAWN,CAAC,CAACG,UAAF,KAAiB,CAA5B,CAAf;AAEdrC,cAAAA,YAAY,CAACjE,MAAM,CAACmG,CAAD,EAAG,8BAAH,CAAP,EAA2C,KAA3C,CAAZ;AACH,aARS,EAQP,IARO,CADF;AAAA,WAXhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAuBA,oBAAC,gBAAD;AACI,UAAA,KAAK,EAAExG,YAAY,CAACmH,YADxB;AAEI,UAAA,OAAO,EAAE,mBAAM;AAAE,gBAAI,KAAI,CAACd,EAAT,EAAY;AAAE,cAAA,KAAI,CAACA,EAAL,CAAQa,SAAR,CAAkBE,IAAlB;AAAyB;AAAC,WAF7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAII,oBAAC,IAAD;AAAM,UAAA,KAAK,EAAEpH,YAAY,CAACqH,UAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAuCA,UAAU,EAAjD,CAJJ,CAvBA,CADJ,CAtBJ,CAzFR,CADJ;;AAoJJ,WAAK1G,MAAM,CAACG,KAAZ;AACI,eACI,oBAAC,IAAD;AAAM,UAAA,KAAK,EAAEd,YAAY,CAAC0F,iBAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,oBAAC,IAAD;AAAM,UAAA,KAAK,EAAE1F,YAAY,CAACiE,aAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADJ,EAEI,oBAAC,kBAAD;AACI,UAAA,kBAAkB,EAAE,4BAACqD,IAAD,EAAU;AAC1BjF,YAAAA,gBAAgB,CAACiF,IAAD,CAAhB;AACH,WAHL;AAII,UAAA,KAAK,EAAElF,aAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFJ,EAQI,oBAAC,IAAD;AAAM,UAAA,KAAK,EAAEpC,YAAY,CAACiE,aAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BARJ,EAWI,oBAAC,SAAD;AACI,UAAA,KAAK,EAAEjE,YAAY,CAAC4F,SADxB;AAEI,UAAA,YAAY,EAAErD,sBAFlB;AAGI,UAAA,KAAK,EAAED,mBAHX;AAII,UAAA,WAAW,EAAC,iCAJhB;AAKI,UAAA,gBAAgB,EAAC,KALrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAXJ,CADJ;;AAqBJ,WAAK3B,MAAM,CAACI,MAAZ;AACI,eACI,oBAAC,IAAD;AAAM,UAAA,KAAK,EAAEf,YAAY,CAAC0F,iBAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,oBAAC,IAAD;AAAM,UAAA,KAAK,EAAE1F,YAAY,CAACiE,aAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADJ,EAII,oBAAC,SAAD;AACI,UAAA,KAAK,EAAEjE,YAAY,CAAC4F,SADxB;AAEI,UAAA,YAAY,EAAEjD,gBAFlB;AAGI,UAAA,KAAK,EAAED,aAHX;AAII,UAAA,WAAW,EAAC,WAJhB;AAKI,UAAA,gBAAgB,EAAC,MALrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAJJ,EAWI,oBAAC,IAAD;AAAM,UAAA,KAAK,EAAE1C,YAAY,CAACiE,aAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAXJ,EAcI,oBAAC,SAAD;AACI,UAAA,KAAK,EAAEjE,YAAY,CAAC4F,SADxB;AAEI,UAAA,YAAY,EAAEnD,cAFlB;AAGI,UAAA,KAAK,EAAED,WAHX;AAII,UAAA,WAAW,EAAC,cAJhB;AAKI,UAAA,gBAAgB,EAAC,KALrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAdJ,CADJ;;AAwBJ;AACI,eAAO,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AA/NR;AAiOH,GAnOD;;AAqOA,WAAS6E,UAAT,GAAsB;AAClB,YAAQjG,MAAM,CAACD,KAAf;AACI,WAAKR,MAAM,CAACC,IAAZ;AACI,eAAO,MAAP;;AACJ,WAAKD,MAAM,CAACE,IAAZ;AACI,eAAO,YAAP;;AACJ,WAAKF,MAAM,CAACG,KAAZ;AACI,eAAO,cAAP;;AACJ,WAAKH,MAAM,CAACI,MAAZ;AACI,eAAO,SAAP;;AACJ;AACI,eAAO,MAAP;AAVR;AAYH;;AAED,SACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEf,YAAY,CAACuH,SAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACK7D,eAAe,EADpB,EAEI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE1D,YAAY,CAACwH,UAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,QAAD;AACI,IAAA,IAAI,EAAE5E,aADV;AAEI,IAAA,UAAU,EAAEiB,mBAFhB;AAGI,IAAA,YAAY,EAAE,sBAACC,IAAD;AAAA,aAAUA,IAAI,CAACT,EAAL,CAAQ8B,QAAR,EAAV;AAAA,KAHlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAMKM,iBAAiB,EANtB,CADJ,CAFJ,EAaI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEzF,YAAY,CAACyH,aAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,gBAAD;AACI,IAAA,KAAK,EAAEzH,YAAY,CAACmH,YADxB;AAEI,IAAA,OAAO,EAAErC,eAFb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAII,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE9E,YAAY,CAACqH,UAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAuCA,UAAU,EAAjD,CAJJ,CADJ,EAOI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAErH,YAAY,CAAC0H,SAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAsC5E,WAAtC,CAPJ,CAbJ,CADJ;AAyBH,CAxbM;AAybP,IAAMiB,MAAM,GAAG4D,UAAU,CAACC,MAAX,CAAkB;AAC7B5D,EAAAA,gBAAgB,EAAE;AACd6D,IAAAA,IAAI,EAAE,CADQ;AAEdC,IAAAA,aAAa,EAAE,KAFD;AAGd3D,IAAAA,cAAc,EAAE;AAHF,GADW;AAO7B4C,EAAAA,cAAc,EAAE;AACZe,IAAAA,aAAa,EAAE,KADH;AAEZ3D,IAAAA,cAAc,EAAE,eAFJ;AAGZ0B,IAAAA,UAAU,EAAE,QAHA;AAIZ3B,IAAAA,YAAY,EAAE;AAJF;AAPa,CAAlB,CAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport {\n    StyleSheet,\n    Text,\n    TextInput,\n    View,\n    TouchableOpacity,\n    FlatList,\n    //Switch,\n} from \"react-native\";\nimport Switch from 'react-ios-switch';\nimport { GlobalColors, GlobalStyles } from \"../styles/GlobalStyles\";\nimport \"../styles/datePicker.css\";\n\nimport { DatePicker, TimePicker, Space } from \"antd\";\nimport \"antd/dist/antd.css\";\n\nimport { ProgressBar } from \"react-native-paper\";\n\nimport moment from \"moment\";\nimport { fs } from \"../Firebase/firebase\";\n\nimport AutocompleteSearch from \"../components/AutocompleteSearch\";\n\nimport  Flatpickr  from \"react-flatpickr\";\nimport {BrowserView, MobileView} from 'react-device-detect';\n\n\nconst STATES = {\n    NAME: 0,\n    TIME: 1,\n    PLACE: 2,\n    PEOPLE: 3,\n    FINISH: 4,\n};\n\nexport const CreateEvent = ({ navigation }) => {\n    const [status, setStatus] = useState({\n        state: STATES.NAME,\n    });\n\n    const [eventName, setEventName] = useState(\"\");\n    const [eventDetails, setEventDetails] = useState(\"\");\n\n    const [startDate, setStartDate] = useState(\n        //moment().startOf(\"day\").add(10, \"hours\")\n        moment().startOf('hour').add(1, \"hours\")\n    );\n    const [endDate, setEndDate] = useState(\n        //moment().startOf(\"day\").add(11, \"hours\")\n        moment().startOf('hour').add(2, \"hours\")\n    );\n\n    const [dateEntryError, setDateEntryError] = useState('')\n\n    const [showEndTime, setShowEndTime] = useState(true);\n\n    // TODO: Change to be based on position / Google Maps\n    const [eventLocation, setEventLocation] = useState(\"\");\n    const [arrivalInstructions, setArrivalInstructions] = useState(\"\");\n\n    const [phoneNumber, setPhoneNumber] = useState(\"\");\n    const [organizerName, setOrganizerName] = useState(\"\");\n\n    const [sectionTitles, setSectionTitles] = useState([]);\n\n    const [errorStatus, setErrorStatus] = useState(\"\");\n\n    const datepickerRef = React.createRef();\n\n\n    useEffect(() => {\n        let newSectionTitles = [];\n        for (let i = 0; i <= status.state; i++) {\n            let newSection = { id: i, title: getSectionTitle(i) };\n            newSectionTitles.push(newSection);\n        }\n        setSectionTitles((sectionTitles) => newSectionTitles);\n    }, [status]);\n\n    function getSectionTitle(section) {\n        switch (section) {\n            case STATES.NAME:\n                return eventName != \"\" ? eventName : \"What ✏️\";\n            case STATES.TIME:\n                return \"When 🕐\";\n            case STATES.PLACE:\n                return \"Where 🌎\";\n            case STATES.PEOPLE:\n                return \"Who 📞\";\n        }\n    }\n\n    const showProgressBar = () => {\n        var progress = status.state / 4;\n        return (\n            <ProgressBar\n                progress={progress}\n                color={\"black\"}\n                style={{ marginHorizontal: 10 }}\n            />\n        );\n    };\n\n    const getMinimizedSection = ({ item }) => {\n        return (\n            <View style={styles.minimizedSection}>\n                <Text style={GlobalStyles.subheaderText}>\n                    {getSectionTitle(item.id)}\n                </Text>\n                {item.id < status.state && (\n                    <TouchableOpacity\n                        style={{\n                            paddingRight: 20,\n                            justifyContent: \"center\",\n                        }}\n                        onPress={() => {\n                            setErrorStatus(\"\");\n                            setStatus({ state: item.id });\n                        }}\n                    >\n                        <Text\n                            style={{\n                                textDecorationLine: \"underline\",\n                                fontSize: 15,\n                            }}\n                        >\n                            Edit\n                        </Text>\n                    </TouchableOpacity>\n                )}\n            </View>\n        );\n    };\n\n    \n\n\n    const onChangeDate = (date, isStartTime) => {\n        console.log(date)\n        if (isStartTime) {\n            setStartDate(date);\n            /*if (endDate.isBefore(date)) {\n                setEndDate(date);\n            }*/\n        } else setEndDate(date);\n    \n    };\n\n    function disabledDates(current) {\n        return current < startDate;\n    }\n\n    function incrementStatus() {\n        setErrorStatus(\"\");\n        setStatus({ state: status.state + 1 });\n    }\n\n\n    function validateSection() {\n        switch (status.state) {\n            case STATES.NAME:\n                if (eventName === \"\")\n                    setErrorStatus(\"Please enter a valid event name!\");\n                else incrementStatus();\n                return;\n            case STATES.TIME:\n                if (startDate === null)\n                    setErrorStatus(\"Please input a valid start date!\");\n                else if (endDate.isBefore(startDate))\n                    setErrorStatus(\"Cannot have an event end before the start time!\")\n                else if (startDate.isBefore(moment()))\n                    setErrorStatus(\"Cannot set events in the past\")\n                else incrementStatus();\n                return;\n            case STATES.PLACE:\n                incrementStatus();\n                return;\n            case STATES.PEOPLE:\n                submitData();\n                return;\n        }\n    }\n\n    // TODO: Pass in optional user field to tether events to a uid\n    function submitData() {\n        let eventData = {\n            eventName: eventName,\n            eventDetails: eventDetails,\n            startDate: startDate.format(\"M/D/YYYY, h:mm a\").toString(),\n            endDate: endDate.format(\"M/D/YYYY, h:mm a\").toString(),\n            eventLocation: eventLocation,\n            arrivalInstructions: arrivalInstructions,\n            phoneNumber: phoneNumber,\n            organizerName: organizerName,\n        };\n\n        console.log(eventData);\n\n        fs.collection(\"events\")\n            .add(eventData)\n            .then((value) => {\n                console.log(value.id);\n                navigation.navigate(\"Publish\", { eventID: value.id });\n            });\n    }\n\n    const getCurrentSection = () => {\n        console.log(startDate.format('YYYY-MM-DD HH:mm'))\n        switch (status.state) {\n            case STATES.NAME:\n                return (\n                    <View style={GlobalStyles.infoSectionFilled}>\n                        <Text style={GlobalStyles.subheaderText}>\n                            Event Name <Text style={{ color: \"red\" }}>*</Text>\n                        </Text>\n                        <TextInput\n                            style={GlobalStyles.textInput}\n                            onChangeText={setEventName}\n                            value={eventName}\n                            placeholder=\"e.g. John's Surprise Birthday Party\"\n                            autoCompleteType=\"off\"\n                        />\n                        <Text style={GlobalStyles.subheaderText}>\n                            Event Description\n                        </Text>\n                        <TextInput\n                            style={GlobalStyles.textInput}\n                            onChangeText={setEventDetails}\n                            value={eventDetails}\n                            placeholder=\"Enter your event details here!\"\n                            autoCompleteType=\"off\"\n                        />\n                    </View>\n                );\n            case STATES.TIME:\n                return (\n                    <View style={GlobalStyles.infoSectionFilled}>\n                        <View style={{ alignItems: \"center\" }}></View>\n                        <Text style={GlobalStyles.subheaderText}>\n                            Start Time\n                        </Text>\n                        <View style={GlobalStyles.timeButton}>\n                            <BrowserView>\n                                <DatePicker\n                                    value={startDate}\n                                    onChange={(date) => onChangeDate(date, true)}\n                                    inputReadOnly={true}\n                                />\n                                <TimePicker\n                                    format={\"HH:mm\"}\n                                    minuteStep={5}\n                                    use12Hours={true}\n                                    showNow={false}\n                                    value={startDate}\n                                    onChange={(date) => onChangeDate(date, true)}\n                                    inputReadOnly={true}\n                                />\n                            </BrowserView>\n                            \n                            <MobileView>\n                                    <Flatpickr\n                                        options={{\n                                            enableTime: true,\n                                            time_24hr: false,\n                                            defaultDate: startDate.format('YYYY-MM-DD HH:mm'),\n                                            minuteIncrement: 10,\n                                            //minDate: moment().format('YYYY-MM-DD HH:mm'),\n                                            \n                                        }}\n                                        minuteStep={5}\n                                        //enableTime={true}\n                                        /*onChange={(dates) =>\n                                            onChangeDate(moment(dates,\"ddd MMM DD YYYY HH:mm:ss ZZ \"), true)\n                                        }*/\n                                        onChange = {(dstr, dobjs, fp) =>\n                                            setTimeout(function() {\n                                                var i = fp.latestSelectedDateObj\n                                                const d = i ? i : new Date()\n                                                const mins = d.getMinutes()\n                        \n                                                if (mins % 5) d.setMinutes(5*Math.round(d.getMinutes() / 5))\n                        \n                                                onChangeDate(moment(d,\"ddd MMM DD YYYY HH:mm:ss ZZ \"), true)\n                                            }, 1000)\n                                        }\n                                        \n                                        //value={}\n                                        //onChange={(dates) => onChangeDate(dates, true)}\n                                        \n                                                \n                                    >\n                                        \n                                    </Flatpickr>\n\n                                \n                            </MobileView>\n                            \n                        </View>\n\n                        <View style={styles.endTimeSection}>\n                            <Text style={GlobalStyles.subheaderText}>\n                                End Time\n                            </Text>\n                            <Switch\n                                /*value={showEndTime}\n                                onValueChange={setShowEndTime}\n                                trackColor={{\n                                    false: \"#767577\",\n                                    true: GlobalColors.shamrock,\n                                }}\n                                activeThumbColor={GlobalColors.shamrock}*/\n                                checked={showEndTime}\n                                onChange={setShowEndTime}\n                                offColor=\"#767577\"\n                                onColor={GlobalColors.shamrock}\n                                //ios_backgroundColor= \"#ffffff\"\n                                //trackColor={{\n                                    //false: ,\n                                   // true: GlobalColors.shamrock,\n                                //}}\n                                //activeThumbColor={GlobalColors.shamrock}\n                                style={GlobalStyles.toggleSwitch}\n                            ></Switch>\n                        </View>\n                        {showEndTime && (\n                            <View style={GlobalStyles.timeButton}>\n                                <BrowserView>\n                                    <DatePicker\n                                        value={endDate}\n                                        onChange={(date) =>\n                                            onChangeDate(date, false)\n                                        }\n                                        disabledDate={disabledDates}\n                                        inputReadOnly={true}\n                                    />\n                                    <TimePicker\n                                        format={\"HH:mm\"}\n                                        minuteStep={5}\n                                        use12Hours={true}\n                                        showNow={false}\n                                        value={endDate}\n                                        onChange={(date) =>\n                                            onChangeDate(date, false)\n                                        }\n                                        inputReadOnly={true}\n                                    />\n                                </BrowserView>\n                                <MobileView>\n                                    <Flatpickr\n                                        ref={fp => this.flatpickr= fp}\n                                        \n                                        //onChange={(dates) => onChangeDate(dates, true)}\n                                        options={{\n                                            time_24hr: false,\n                                            enableTime: true,\n                                            defaultDate: endDate.format('YYYY-MM-DD HH:mm'),\n                                            //minDate: moment().format('YYYY-MM-DD HH:mm')\n                                            \n                                        }}\n                                        onChange = {(dstr, dobjs, fp) =>\n                                            setTimeout(function() {\n                                                var i = fp.latestSelectedDateObj\n                                                const d = i ? i : new Date()\n                                                const mins = d.getMinutes()\n                        \n                                                if (mins % 5) d.setMinutes(5*Math.round(d.getMinutes() / 5))\n                        \n                                                onChangeDate(moment(d,\"ddd MMM DD YYYY HH:mm:ss ZZ \"), false)\n                                            }, 1000)\n                                        }\n                                    >\n                                    <TouchableOpacity\n                                        style={GlobalStyles.submitButton}\n                                        onPress={() => { if (this.fp){ this.fp.flatpickr.open()}}}\n                                    >\n                                        <Text style={GlobalStyles.buttonText}>{buttonText()}</Text>\n                                    </TouchableOpacity>\n                                    </Flatpickr>\n                                </MobileView>\n                            </View>\n                        )}\n                    </View>\n                );\n            case STATES.PLACE:\n                return (\n                    <View style={GlobalStyles.infoSectionFilled}>\n                        <Text style={GlobalStyles.subheaderText}>Place</Text>\n                        <AutocompleteSearch\n                            onChangeOutputText={(text) => {\n                                setEventLocation(text);\n                            }}\n                            value={eventLocation}\n                        />\n                        <Text style={GlobalStyles.subheaderText}>\n                            Instructions\n                        </Text>\n                        <TextInput\n                            style={GlobalStyles.textInput}\n                            onChangeText={setArrivalInstructions}\n                            value={arrivalInstructions}\n                            placeholder=\"There's guest parking in Lot B!\"\n                            autoCompleteType=\"off\"\n                        />\n                    </View>\n                );\n            case STATES.PEOPLE:\n                return (\n                    <View style={GlobalStyles.infoSectionFilled}>\n                        <Text style={GlobalStyles.subheaderText}>\n                            Event Creator\n                        </Text>\n                        <TextInput\n                            style={GlobalStyles.textInput}\n                            onChangeText={setOrganizerName}\n                            value={organizerName}\n                            placeholder=\"Joe Shmoe\"\n                            autoCompleteType=\"name\"\n                        />\n                        <Text style={GlobalStyles.subheaderText}>\n                            Phone Number\n                        </Text>\n                        <TextInput\n                            style={GlobalStyles.textInput}\n                            onChangeText={setPhoneNumber}\n                            value={phoneNumber}\n                            placeholder=\"678-999-8212\"\n                            autoCompleteType=\"tel\"\n                        />\n                    </View>\n                );\n            default:\n                return <View></View>;\n        }\n    };\n\n    function buttonText() {\n        switch (status.state) {\n            case STATES.NAME:\n                return \"Next\";\n            case STATES.TIME:\n                return \"Keep Going\";\n            case STATES.PLACE:\n                return \"Almost There\";\n            case STATES.PEOPLE:\n                return \"Submit!\";\n            default:\n                return \"Next\";\n        }\n    }\n\n    return (\n        <View style={GlobalStyles.container}>\n            {showProgressBar()}\n            <View style={GlobalStyles.topSection}>\n                <View>\n                    <FlatList\n                        data={sectionTitles}\n                        renderItem={getMinimizedSection}\n                        keyExtractor={(item) => item.id.toString()}\n                    />\n                    {getCurrentSection()}\n                </View>\n            </View>\n\n            <View style={GlobalStyles.bottomSection}>\n                <TouchableOpacity\n                    style={GlobalStyles.submitButton}\n                    onPress={validateSection}\n                >\n                    <Text style={GlobalStyles.buttonText}>{buttonText()}</Text>\n                </TouchableOpacity>\n                <Text style={GlobalStyles.errorText}>{errorStatus}</Text>\n            </View>\n        </View>\n    );\n};\nconst styles = StyleSheet.create({\n    minimizedSection: {\n        flex: 1,\n        flexDirection: \"row\",\n        justifyContent: \"space-between\",\n    },\n\n    endTimeSection: {\n        flexDirection: \"row\",\n        justifyContent: \"space-between\",\n        alignItems: \"center\",\n        paddingRight: 20,\n    },\n});\n"]},"metadata":{},"sourceType":"module"}